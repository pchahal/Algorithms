//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;


namespace Patterns
{

	public class VP
	{
		private String name;
		private String division;
		public VP(String n, String d)
		{
			name = n;
			division = d;
		}
		public String getName()
		{
			return name;
		}
		public void print()
		{
			Console.WriteLine("Name: " + name + " Division: " + division);
		}
	}

	public class Division
	{
		private int current;
		private string name;
		private VP[] VPs = new VP[100];

		public Division(string n)
		{
			name = n;
		}
		public String getName()
		{
			return name;
		}
		public void Add(string name)
		{
			VP vp = new VP(name,"d");
			current++;
			VPs[current]=vp;
		}
		public DivisionIterator iterator()
		{
			return new DivisionIterator(VPs);
		}

	}




	public class DivisionIterator:IEnumerator
	{
		VP[] vpList;
		int current=0;
		
		public DivisionIterator (VP[] vplist)
		{
			vpList = vplist;
		}

		public bool MoveNext ()
		{
			if (current < vpList.Length - 1) {
				current++;
				return true;
			} else
				return false;
		}

		public void Reset ()
		{
			throw new NotImplementedException ();
		}

		public object Current {
			get {
				return vpList[current]; 
			}
		}			
	}
}


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace Patterns
{
	public class AutoRepository
	{
		public AutomobileBase Find(string carName)
		{
			if (carName.Contains("mini"))
				return new MiniCooper();
			
			return AutomobileBase.NULL;
		}
	}



	public abstract class AutomobileBase
	{
		public abstract Guid Id { get; }
		public abstract string Name { get; }
		public abstract void Start();
		public abstract void Stop();
		static readonly NullAutomobile nullAutomobile = new NullAutomobile();
		
		public static NullAutomobile NULL
		{
			get
			{
				return nullAutomobile;
			}
		}
		
		public class NullAutomobile : AutomobileBase
		{
			public override Guid Id
			{
				get { return Guid.Empty; }
			}
			
			public override string Name
			{
				get { return string.Empty; }
			}
			
			public override void Start() { }
			public override void Stop() { }
		}
	}

	public class BMW335XI : AutomobileBase
	{
		public override string Name
		{
			get { return "BMW 335 Xi"; }
		}
		
		public override Guid Id
		{
			get { return new Guid("68BECCDC-0FBD-4FB9-B0BB-D5D8A2AFD9F8"); }
		}
		
		public override void Start()
		{
			Console.WriteLine("Beemer started. All 4 wheels under power.");
		}
		
		public override void Stop()
		{
			Console.WriteLine("Beemer stopped.");
		}
	}

	public class MiniCooper : AutomobileBase
	{
		public override Guid Id
		{
			get { return Guid.NewGuid(); }
		}
		
		public override string Name
		{
			get { return "Mini Cooper S"; }
		}
		
		public override void Start()
		{
			Console.WriteLine("Mini Cooper started. 1.6L of raw power is ready to go.");
		}
		
		public override void Stop()
		{
			Console.WriteLine("Mini Cooper stopped.");
		}
	}
}

